language: java

dist: xenial

os: linux

cache:
  directories:
  - "$HOME/.m2"

addons:
  apt:
    packages:
    - maven
    - python3

env:
  global:
  - MVN="mvn -B -f druid/pom.xml"
  - DOCKER_REGISTRY=ghcr.io
  - DOCKER_REPOSITORY=arm64-compat/apache/druid
  - secure: Tx48doFOaRzQj8SeXP40CI5g/btfmpTPEtoIeObhV9SdFdE3L8s1cDrB8YcNd59wrmVDRGRRmvrsCwCO6WAvu9pyNWMV8Ox4JA86NJovR3/u57Y7ZSsZLavTysoeyvxNh1bkqFMAMjzivZ+oKTLsbbrV0XPAvr8rKl8s4DEnnVp4KFyz1Z8qE0BtpWbCZDkoHKBx0H1vMAPyVux56aS49gWHsCCfSA3/5AkChuhcGgTz8J2IudkoFU4ANiVgfFUFx418raKMHyNOwz4ia8eMPwaVzf2msloG1+4E63Nm6r7MjLZyRAuS0/zHGvNkckzubcT9TB3jjcUtkFOweWUxnRAz0Ha1uNkLS/QEeGbID/4OOiS8BC06lkv5DVT6ngPTQBfC/Zm9i/6c2gtk07pSe5v4NoiEJHBheFPCNreMUqScT5SAO+WJKUbWuRbsKDfcZvhFfHMcBgnZo40FBqiNQTnOYiD58Pz4VL6+3cgWFOFGyC/pieP6KkPXFKWBBRb7L+IGSjE88RHUrkKR2ucsLxslCitMPc7oRj+ewwxFtyWMpb9zrIMkHRQ3n1SIlQWozpYHRdBzsHVlYa688Y7TxzexMMUBFEmq4LPj8zrO2oF/1+ynLWklmvIM1lvPQSBda2SXv2j57hsxa7WqFkyRLbtBS1O896z6Q5ifXoEcoXY=
  - secure: PMAj5Ik8Tsvceu7u2lqMQrhpmkWMx4fP/L/col/6B9Er/Up+XHQkcYC+bqmY8nQZKjNzGulVTBt4XUSB28ZuzB9y5WE56zAClS875dP+M6RoodTQs050cGdBsdyfuJ9dSOUT2csxhEA8rFd83Vqurk2TCpmY2HkvgoiBrUPQuC7v7sRWF1InbAoBnotJJ4rxSLcEsNddenQDFt77Kckd6I+AVEvbPrnKrm32cwHXKrXrRBADwN8v1q995N7CWB52mwNIf3UFzZprZgljYheH1aR1puPBvIwU5xwp/uu4CBABykrvnn0gRFvI0KZJFU1Ftv0T8h+rUdA7YgxaPyCuqN+6u78JvXG5qcX4sxogzGoGGFfpp3hIl5ZKBJ1g8ChM+t2+ZxD4ClcykjVwCPL/DgfofbmFlnotFERGgmr35Rb4RmqzREoJVgGoslm+xTDm8rEdzY94aAymJ3Eqtx4ceRhGknMaeqypOCIMSrLrxzTOYDBjoih42F2176c0fCMFM7hgerTUIAg8AE2M7oa8A6vQYdS0qeUAuqyAC7GsaM2axZLTJJX80YwfL/W4vspm/9q7Pxn1CeLMBstWoP4w28DUJ5+o0msR23gQlVUAAMDM39J6eGmLTEbtzNfWPP9EzLJNBtkMlWtVQEUjSi33iDXVmQoFbZZCBSpQYyhOfWU=

stages:
- build
- manifest

services:
- docker

before_script: &common_before_script
- export DRUID_RELEASE=$(curl -s https://api.github.com/repos/apache/druid/releases/latest | jq .tag_name -r)
- git -C druid checkout $DRUID_RELEASE
- export DRUID_VERSION=$(${MVN} -q org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -DforceStdout=true)
- export IMAGE_NAME=${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}
- echo $DRUID_VERSION

jobs:
  include:
  - name: "ARM64 docker image build"
    stage: build
    arch: arm64
    jdk: openjdk11
    before_script: &build_before_script
    - *common_before_script
    - export IMAGE_TAG=${DRUID_VERSION}-${TRAVIS_CPU_ARCH}
    - export DRUID_IMAGE=${IMAGE_NAME}:${IMAGE_TAG}
    script: &build_image
    - "${MVN} install -Pdist,bundle-contrib-exts -Pskip-static-checks,skip-tests -Dmaven.javadoc.skip=true"
    - docker build --build-arg DRUID_VERSION=${DRUID_VERSION} -t ${DRUID_IMAGE} .
    before_deploy: &docker_login echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin ${DOCKER_REGISTRY}
    deploy: &push_image
      provider: script
      on:
        all_branches: true
      script: docker push ${DRUID_IMAGE}
  - name: "AMD64 docker image build"
    stage: build
    arch: amd64
    jdk: openjdk11
    before_script: *build_before_script
    script: *build_image
    before_deploy: *docker_login
    deploy: *push_image
  - stage: manifest
    install: skip
    before_script:
    - *common_before_script
    - *docker_login
    script:
    - docker manifest create ${IMAGE_NAME}:${DRUID_VERSION} ${IMAGE_NAME}:${DRUID_VERSION}-amd64 ${IMAGE_NAME}:${DRUID_VERSION}-arm64
    - docker manifest annotate ${IMAGE_NAME}:${DRUID_VERSION} ${IMAGE_NAME}:${DRUID_VERSION}-amd64 --os linux --arch amd64
    - docker manifest annotate ${IMAGE_NAME}:${DRUID_VERSION} ${IMAGE_NAME}:${DRUID_VERSION}-arm64 --os linux --arch arm64 --variant v8
    deploy:
      provider: script
      on:
        all_branches: true
      script: docker manifest push ${IMAGE_NAME}:${DRUID_VERSION}
